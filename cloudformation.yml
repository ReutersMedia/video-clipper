Description: >
    Creates an ALB and ECS service for the video clipping service
Parameters:
  EnvironmentName:
    Description: An environment name that will be prefixed to resource names, e.g. prod, env.  Must be lower-case.
    Type: String
    AllowedPattern: "[a-z0-9]+"
  LBSubnets:
    Type: List<AWS::EC2::Subnet::Id>
    Description: List of subnets for the Application LB
  VPCId:
    Type: AWS::EC2::VPC::Id
    Description: VPC For the deployment
  Bucket:
    Type: String
    Description: Bucket name for the video source
  Cluster:
    Type: String
    Description: ECS Cluster Name
  TaskCount:
    Type: Number
    Description: Number of tasks to start
Resources:
  ECSServiceRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub "video-clipper-${EnvironmentName}-service-role"
      AssumeRolePolicyDocument: 
        Version: "2012-10-17"
        Statement: 
          - 
            Effect: "Allow"
            Principal: 
              Service: 
                - "ecs.amazonaws.com"
            Action: 
              - "sts:AssumeRole"
      Path: "/"
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AmazonEC2ContainerServiceRole
  ECSService:
    Type: AWS::ECS::Service
    Properties:
      Cluster: !Ref Cluster
      DeploymentConfiguration:
        MaximumPercent: 200
        MinimumHealthyPercent: 100
      DesiredCount: !Ref TaskCount
      HealthCheckGracePeriodSeconds: 120
      LoadBalancers:
        - ContainerName: !Sub "video-clipper-${EnvironmentName}"
          ContainerPort: 80
          TargetGroupArn: !Ref AppTargetGroup
      TaskDefinition: !Ref ECSTask
      ServiceName: !Sub "video-clipper-${EnvironmentName}"
      Role: !Ref ECSServiceRole
  ECSTask:
    Type: AWS::ECS::TaskDefinition
    Properties:
      TaskRoleArn: !Ref ECSTaskRole
      ContainerDefinitions:
        -
          Name: "video-clipper"
          Image: "reutersmedia/video-clipper:latest"
          Memory: "1000"
          PortMappings:
            -
              ContainerPort: 80
              HostPort: 8581
          Essential: "true"
          Environment:
            - Name: DOMAIN_LIST
              Value: qa.cdn1.agency.thomsonreuters.com,qa.videobroadcast.cdn.reuters.co
            - Name: SOURCE_BUCKET
              Value: qa-tr-content-archive-video-e
          LinuxParameters:
            Capabilities:
              Add:
                - mknod
                - sys_admin
            Devices:
              - ContainerPath: "/dev/fuse"
                HostPath: "/dev/fuse"
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: !Ref ECSTaskLogGroup
              awslogs-region: !Ref AWS::Region
              awslogs-stream-prefix: video-clipper-task
  ECSTaskLogGroup:
    Type: AWS::Logs::LogGroup
    Properties: 
      LogGroupName: !Sub "video-clipper-${EnvironmentName}"
      RetentionInDays: 14
  ECSTaskRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub "video-clipper-${EnvironmentName}-task-role"
      AssumeRolePolicyDocument: 
        Version: "2012-10-17"
        Statement: 
          - 
            Effect: "Allow"
            Principal: 
              Service: 
                - "ec2.amazonaws.com"
                - "ecs-tasks.amazonaws.com"
            Action: 
              - "sts:AssumeRole"
      Path: "/"
      Policies: 
        -
          PolicyName: !Sub "video-clipper-ecs-task-policy-${EnvironmentName}"
          PolicyDocument: 
            Version: "2012-10-17"
            Statement: 
              -
                Effect: "Allow"
                Action:
                  - "s3:Get*"
                  - "s3:List*"
                Resource:
                  - !Sub "arn:aws:s3:::${Bucket}"
                  - !Sub "arn:aws:s3:::${Bucket}/*"
  AppSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow http from public internet
      VpcId: !Ref VPCId
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
      SecurityGroupEgress:
        - IpProtocol: "-1"
          CidrIp: 0.0.0.0/0
  AppLB:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Scheme: internet-facing
      Subnets: !Ref LBSubnets
      LoadBalancerAttributes:
        - Key: idle_timeout.timeout_seconds
          Value: '30'
      SecurityGroups:
        - Ref: AppSecurityGroup
      Tags:
        - Key: tr:application-asset-insight-id
          Value: 204678
        - Key: tr:resource-owner
          Value: kenneth.ellis@thomsonreuters.com      
        - Key: tr:environment-type
          Value: !Ref EnvironmentName
        - Key: tr:client_id
          Value: video-clipper  
        - Key: Name
          Value: !Sub "VideoClipper${EnvironmentName}"
  AppLBListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
        - Type: forward
          TargetGroupArn:
            Ref: AppTargetGroup
      LoadBalancerArn:
        Ref: AppLB
      Port: '80'
      Protocol: HTTP
  AppTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      HealthCheckIntervalSeconds: 15
      HealthCheckProtocol: HTTP
      HealthCheckTimeoutSeconds: 10
      HealthyThresholdCount: 2
      UnhealthyThresholdCount: 3
      HealthCheckPath: /health-check
      Matcher:
        HttpCode: '200'
      Name: !Sub "VideoClipper${EnvironmentName}"
      Port: 8581
      Protocol: HTTP
      TargetGroupAttributes:
        - Key: deregistration_delay.timeout_seconds
          Value: '20'
      VpcId: !Ref VPCId
      Tags:
        - Key: tr:application-asset-insight-id
          Value: 204678
        - Key: tr:resource-owner
          Value: kenneth.ellis@thomsonreuters.com      
        - Key: tr:environment-type
          Value: !Ref EnvironmentName
        - Key: tr:client_id
          Value: video-clipper  
      

